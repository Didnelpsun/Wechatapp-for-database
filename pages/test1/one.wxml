<view class="main">
  <swiper indicator-dots="true" autoplay="true" duration="3000" >
    <swiper-item>
        <view class="swiper"><text class="descri">　　为了预防关系模式中存在异常，必须在最开始设计关系型数据库时就规范化关系模式，关系模式的好与坏，衡量的标准就是模式的范式（Normal Forms，简称为NF）。\n　　范式是符合某一种级别的关系模式的集合。范式的种类与数据依赖有直接的关系，有1NF、2NF、3NF、BCNF等多种，最高为五范式。如果一个关系满足某个范式要求，则它也会满足较低的所有范式要求。\n　　一个低一级范式的关系模式，通过模式分解（投影运算）可以转换为若干的高一级范式的关系模型的集合，这个过程叫规范化。用几个简单的关系去取代原来结构复杂的关系的过程就是关系规范化。\n　　将关系模式可以通过投影分解为多个关系模式，但是其分解不唯一，分解后的关系模式应当满足与原关系模式等价，既无损连接有保持函数依赖。
        </text></view>
    </swiper-item>
    <swiper-item>
         <view class="swiper"><text class="descri">　　1、第一范式 ：当且仅当一个关系R中，每一个分量都是不可再分的数据项时，就是第一范式。第一范式是对关系模式的最起码的要求。不满足的数据库模式不能称为关系数据库。\n　　2、第二范式 ：若R∈1NF，且每一个非主属性完全函数依赖于码，不存在部分函数依赖，就是第二范式。\n　　3、第三范式 ：如果关系模式R是1NF，且每个非主属性都不传递完全依赖于R的候选码，那么称R是第三范式(3NF)的模式。\n　　4、BC范式 ：关系模式R (U, F)∈1NF,如果对于R的每个函数依赖X->Y，若Y不属于X，则X必含有候选码，那么R∈BCNF。即每一个决定属性集(因素)都包含(候选)码;R中的所有属性(主，非主属性)都完全函数依赖于码;R∈3NF。
        </text></view>
    </swiper-item>
        <swiper-item>
          <view class="swiper"><text class="descri">　　可以在下方选择关卡进行通关，每一关的具体通过要求会在每一关显示，如需判断是否游戏成功请点击判断，如果游戏成功，则会在下方显示成功，如果失败则相应显示失败。需要返回上一关或则进入下一关或者返回上一关可以直接点击上一关或者下一关，无需返回到主页面进行选择。\n　　假设下面关卡中都不会出现重名的情况。\n　　祝学习愉快！</text></view>
    </swiper-item>    
  </swiper>
  <picker bindchange="bindPickerChange" value="{{index}}" range="{{array}}">
    <view class="picker">
      关卡选择：{{array[index]}}
    </view>
  </picker>
</view>
